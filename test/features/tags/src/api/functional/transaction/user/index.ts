/**
 * @module api.functional.transaction.user
 * @packageDocumentation
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

/**
 * @controller TransactionController.findTransactionsByUser
 * @path GET /transaction/user/:pubkey
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function findTransactionsByUser(
  connection: IConnection,
  pubkey: PubkeyInput,
): Promise<void> {
  return PlainFetcher.fetch(connection, {
    ...findTransactionsByUser.METADATA,
    template: findTransactionsByUser.METADATA.path,
    path: findTransactionsByUser.path(pubkey),
  });
}
export namespace findTransactionsByUser {
  export const METADATA = {
    method: "GET",
    path: "/transaction/user/:pubkey",
    request: null,
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 200,
  } as const;

  export const path = (pubkey: PubkeyInput) =>
    `/transaction/user/${encodeURIComponent(pubkey?.toString() ?? "null")}`;
}
