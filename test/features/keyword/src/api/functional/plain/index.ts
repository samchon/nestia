/**
 * @module api.functional.plain
 * @packageDocumentation
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";
import type { Resolved } from "typia";

/**
 * @controller PlainController.send
 * @path POST /plain
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function send(
  connection: IConnection,
  props: send.Props,
): Promise<send.Output> {
  return PlainFetcher.fetch(
    {
      ...connection,
      headers: {
        ...connection.headers,
        "Content-Type": "text/plain",
      },
    },
    {
      ...send.METADATA,
      template: send.METADATA.path,
      path: send.path(),
    },
    props.body,
  );
}
export namespace send {
  export type Props = {
    body: Body;
  };
  export type Body = Resolved<string>;
  export type Output = Resolved<string>;

  export const METADATA = {
    method: "POST",
    path: "/plain",
    request: {
      type: "text/plain",
      encrypted: false,
    },
    response: {
      type: "text/plain",
      encrypted: false,
    },
    status: 201,
  } as const;

  export const path = () => "/plain";
}
