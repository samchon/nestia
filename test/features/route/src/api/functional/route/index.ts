/**
 * @module api.functional.route
 * @packageDocumentation
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";
import type { Primitive } from "typia";

import type { IBbsArticle } from "../../structures/IBbsArticle";

/**
 * @controller TypedRouteController.random
 * @path GET /route/random
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function random(connection: IConnection): Promise<random.Output> {
  return PlainFetcher.fetch(connection, {
    ...random.METADATA,
    template: random.METADATA.path,
    path: random.path(),
  });
}
export namespace random {
  export type Output = Primitive<IBbsArticle>;

  export const METADATA = {
    method: "GET",
    path: "/route/random",
    request: null,
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 200,
  } as const;

  export const path = () => "/route/random";
}
