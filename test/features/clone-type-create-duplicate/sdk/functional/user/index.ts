/**
 * @module api.functional.user
 * @packageDocumentation
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

import type { IUser } from "../../structures/IUser";

/**
 * Get authorized user's profile
 *
 * @returns User profile
 * @throws 401
 * @summary get user's profile
 * @tag user
 * @security bearer
 * @controller UserController.profile
 * @path GET /user/profile
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function profile(
  connection: IConnection,
): Promise<profile.Output> {
  return PlainFetcher.fetch(connection, {
    ...profile.METADATA,
    template: profile.METADATA.path,
    path: profile.path(),
  });
}
export namespace profile {
  export type Output = IUser.IProfile.o1;

  export const METADATA = {
    method: "GET",
    path: "/user/profile",
    request: null,
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: 200,
  } as const;

  export const path = () => "/user/profile";
}
